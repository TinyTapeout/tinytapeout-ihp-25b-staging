name: gds

on:
  workflow_dispatch:
  push:
    # Don't run on project submissions:
    branches-ignore:
      - projects/tt_um_*
  pull_request:
    # Don't run on project submissions:
    paths-ignore:
      - projects/tt_um_*/**

jobs:
  gds:
    env:
      SHUTTLE_SLUG: TTIHP25b
      PYTHONIOENCODING: utf-8
      PDK: ihp-sg13g2
      PDK_ROOT: ${{ github.workspace }}/IHP-Open-PDK
      TT_CONFIG: ihp-sg13g2.yaml
      # Uncomment the following line to build only the specified projects:
      #TT_ONLY_PROJECTS: tt_um_chip_rom,tt_um_factory_test

    runs-on: ubuntu-latest
    steps:
      - name: checkout repo
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Free Disk Space (Ubuntu)
        uses: jlumbroso/free-disk-space@main
        with:
          large-packages: false
          docker-images: false
          swap-storage: false
          android: false

      - name: setup python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'
      - run: pip install -r tt-multiplexer/py/requirements.txt -r tt/requirements.txt

      - name: Update caravel configuration
        run: python ./tt/configure.py --update-shuttle

      - name: Install Nix and configure FOSSi cache
        uses: cachix/install-nix-action@v31
        with:
          extra_nix_config: |
            extra-substituters = https://nix-cache.fossi-foundation.org
            extra-trusted-public-keys = nix-cache.fossi-foundation.org:3+K59iFwXqKsL7BNu6Guy0v+uTlwsxYQxjspXzqLYQs=

      - name: Patch projects to move power rails to TopMetal1
        working-directory: projects
        run: |
          for project in tt_um_*; do
            if [ "$project" = "tt_um_chip_rom" ]; then
              continue
            fi

            if [ -f $project/$project.gds.br ]; then
              brotli -jd $project/$project.gds.br
            fi
            
            python ../tt-multiplexer/py/ihp_legacy_mod_lef.py $project/$project.lef $project/$project.lef

            if [ -f $project/$project.gds ]; then
              python ../tt-multiplexer/py/ihp_legacy_mod_gds.py $project/$project.gds $project/$project.gds
            fi

            if [ -f $project/$project.oas ]; then
              python ../tt-multiplexer/py/ihp_legacy_mod_gds.py $project/$project.oas $project/$project.oas
            fi
          done

      - name: Harden Chip ROM
        run: nix-shell $GITHUB_WORKSPACE/librelane/shell.nix --run "python -m librelane --pdk-root $PDK_ROOT --manual-pdk --pdk $PDK tt/rom/config.json"

      - name: Harden tt_ctrl
        working-directory: tt-multiplexer/ol2/tt_ctrl
        run: nix-shell $GITHUB_WORKSPACE/librelane/shell.nix --run "python build.py"

      - name: Harden tt_mux
        working-directory: tt-multiplexer/ol2/tt_mux
        run: nix-shell $GITHUB_WORKSPACE/librelane/shell.nix --run "python build.py"

      - name: Copy macros
        run: python ./tt/configure.py --copy-macros

      - name: Patch tt_top build script to skip DRC
        run: |
          sed -i 's/^[[:space:]]*KLayout\.DRC,$/#&/' tt-multiplexer/ol2/tt_top/build.py
          sed -i 's/^[[:space:]]*Checker\.KLayoutDRC,$/#&/' tt-multiplexer/ol2/tt_top/build.py
          sed -i 's/^[[:space:]]*Magic\.DRC,$/#&/' tt-multiplexer/ol2/tt_top/build.py
          sed -i 's/^[[:space:]]*Checker\.MagicDRC,$/#&/' tt-multiplexer/ol2/tt_top/build.py

      - name: Harden tt_top
        working-directory: tt-multiplexer/ol2/tt_top
        run: nix-shell $GITHUB_WORKSPACE/librelane/shell.nix --run "python build.py"

      - name: Copy final results
        run: python ./tt/configure.py --copy-final-results

      - name: Create IHP submission
        run: python ./tt/configure.py --create-ihp-submission

      - name: upload GDS artifact
        if: success() || failure()
        uses: actions/upload-artifact@v4
        with:
          name: GDS
          path: tt-multiplexer/ol2/tt_top/runs/RUN_*/*

      - name: upload macros artifact
        if: success() || failure()
        uses: actions/upload-artifact@v4
        with:
          name: macros
          path: |
            tt-multiplexer/cfg/*.yaml
            tt-multiplexer/ol2/tt_top/gds/*
            tt-multiplexer/ol2/tt_top/lef/*
            tt-multiplexer/ol2/tt_top/spef/*
            tt-multiplexer/ol2/tt_top/verilog/*
            tt-multiplexer/ol2/tt_mux/runs/RUN_*/*
            tt-multiplexer/ol2/tt_ctrl/runs/RUN_*/*

      - name: upload shuttle_index.json
        if: success() || failure()
        uses: actions/upload-artifact@v4
        with:
          name: shuttle_index
          path: shuttle_index.json

      - name: Install KLayout
        shell: bash
        run: |
          wget https://github.com/TinyTapeout/klayout/releases/download/v0.29.12/klayout_0.29.12-1_amd64.deb
          sudo apt-get update && sudo apt-get install -y ./klayout_0.29.12-1_amd64.deb

      - name: Generate fill and add logo
        working-directory: fill
        run: make fill KLAYOUT_CMD=/usr/bin/klayout -j2

      - name: Rename top-level cell for IHP submission, convert to OAS
        run: |
          python fill/rename.py ihp/gds/tt_ihp_wrapper_final.gds ihp/gds/FMD_QNC_$SHUTTLE_SLUG.gds FMD_QNC_$SHUTTLE_SLUG
          strm2oas ihp/gds/FMD_QNC_$SHUTTLE_SLUG.gds ihp/gds/FMD_QNC_$SHUTTLE_SLUG.oas

      - name: upload IHP submission directory
        uses: actions/upload-artifact@v4
        if: success() || failure()
        with:
          name: ihp_submission
          path: ihp

      # Install iverilog, cocotb (required for GL test)
      - name: install oss-cad-suite
        uses: YosysHQ/setup-oss-cad-suite@v3
        with:
          version: '2024-10-21'
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: GL simulation
        working-directory: verilog/dv/mux
        env:
          EXPECTED_REPO: ${{ github.repository }}
        run: |
          # temporary workaround for missing bits in pad_raw:
          sed -i 's/inout \[49:0\] pad_raw/inout [63:0] pad_raw/' ../../../ihp/verilog/gl/tt_ihp_wrapper.nl.v

          make clean test_mux_gl
          # make will return success even if the test fails, so check for failure in the results.xml
          ! grep failure results.xml

      - name: upload GL test results
        if: success() || failure()
        uses: actions/upload-artifact@v4
        with:
          name: gl_test_vcd
          path: |
            verilog/dv/mux/results.xml
            verilog/dv/mux/test_mux.vcd
            verilog/dv/mux/test_mux.gtkw
